indent_with_tabs		= 0		# 1=indent to level only, 2=indent with tabs
input_tab_size			= 8		# original tab size
output_tab_size			= 8		# new tab size
indent_columns			= 4
indent_access_spec      = 0
indent_access_spec_body = true
indent_namespace        = true
indent_class			= true
indent_brace			= 0
indent_extern           = true

nl_class_brace 				= add
nl_namespace 				= add
nl_collapse_empty_body 		= true
nl_class_leave_one_liners	= true
nl_func_leave_one_liners    = true
nl_if_leave_one_liners      = true
nl_assign_leave_one_liners  = true
nl_enum_leave_one_liners    = true
nl_enum_brace			= add	# "enum {" vs "enum \n {"
nl_union_brace			= add	# "union {" vs "union \n {"
nl_struct_brace			= add	# "struct {" vs "struct \n {"
nl_do_brace			= add		# "do {" vs "do \n {"
nl_if_brace			= add		# "if () {" vs "if () \n {"
nl_for_brace			= add		# "for () {" vs "for () \n {"
nl_else_brace			= add		# "else {" vs "else \n {"
nl_while_brace			= add		# "while () {" vs "while () \n {"
nl_switch_brace			= add		# "switch () {" vs "switch () \n {"
nl_fcall_brace			= add		# "foo() {" vs "foo()\n{"
nl_fdef_brace			= add		# "int foo() {" vs "int foo()\n{"
nl_brace_while			= add
nl_brace_else			= add
nl_squeeze_ifdef		= TRUE
nl_start_of_file        = remove
nl_end_of_file          = remove
