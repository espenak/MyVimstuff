# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r"))
	{
	  char buf[1024];
	  while (size_t len = fread(buf, 1, sizeof(buf), $2))
	    v.insert(v.end(), buf, buf + len);
	  fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> v${2};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`}
	{
	  ${2}
	}
# Class
snippet cl
	class ${1:`Filename('$1', 'name')`}
	{
	public:
	  $1(${2:arguments});

	private:
	  ${3:/* data */}
	};

snippet test
	#define BOOST_TEST_DYN_LINK
	#define BOOST_TEST_MODULE ${1:`Filename('$1', 'name')`}
	#include <boost/test/unit_test.hpp>
	#include <string>
	using namespace ${2:P2G};

	BOOST_AUTO_TEST_CASE( ${3:$1}${4:Main} )
	{
	  BOOST_REQUIRE(${5:2 == 2});
	}

snippet std::co
	std::cout << ${1} << std::endl;
snippet co
	cout << ${1} << endl;

snippet std
	std::${1}
