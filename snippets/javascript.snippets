snippet if
	if(${1:true}) {
		${2}
	};
# if ... else
snippet ife
	if(${1:true}) {
		${2}
	} else{
		${3}
	};
# Object Method
snippet :f
	${1:method_name}: function(${2}) {
		${4}
	}${3}

snippet for
	for(var ${1:index}=0; $1<${2:someArray}.length; $1++)  {
		var ${3:value} = $2[$1];
		${4}
	}
snippet aeach
	Ext.Array.each(${1:loopvar}, function(${2:value}, ${3:index}) {
		${4}
	}, this);
snippet oeach
	Ext.Object.each(${1:loopvar}, function(${2:value}, ${3:key}) {
		${4}
	}, this);

snippet onf
	this.on('${1:event}', function() {
		${2}
	}, this);
snippet on
	this.on('${1:event}', this.${2}, this);
snippet lis
	listeners: {
		scope: this,
		${1}
	}
snippet wid
	extend: 'Ext.${1:panel.Panel}',
	alias: 'widget.${2}',

	config: {
	},
	
	constructor: function(config) {
	    this.initConfig(config);
	    this.callParent([config]);
	},

	initComponent: function() {
	    Ext.apply(this, {
	    });
	    this.callParent(arguments);
	}
snippet conf
	config: {
		$1{}
	},
snippet con
	constructor: function(config) {
	    this.initConfig(config);
	    this.callParent([config]);
	},
snippet cfg
	/**
	 * @cfg {${1:Object}} [${2:config}]
	 * ${3:help}
	 */
snippet init
	initComponent: function() {
	    Ext.apply(this, {
			${2}
	    });
	    this.callParent(arguments);
	}${1}
snippet log
	console.log(${1});
snippet logh
	console.log('hei');

snippet xte
	Ext.create('Ext.XTemplate',
	    ${2}
	)${1:,}


snippet tif
	'<tpl if="${1}">',
		${3},
	'</tpl>'${2:,}

snippet telse
	'<tpl else>',
		${1},

snippet telif
	'<tpl elseif="${1}">',
		${2},

snippet tfor
	'<tpl for="${1}">',
		${3},
	'</tpl>'${2:,}
